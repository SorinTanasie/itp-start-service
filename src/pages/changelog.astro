---
import Base from "@/layouts/Base.astro";
import dateFormat from "@/lib/utils/dateFormat";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import { getEntry } from "astro:content";

const changelog = await getEntry("pages", "changelog");

const { title, meta_title, description, logs } = changelog.data;

const logsReversed = [...logs].reverse();

const call_to_action = await getEntry("sections", "call-to-action");
---

<Base title={title} meta_title={meta_title} description={description}>
  <section class="section" data-aos="fade-up-sm">
    <div class="container mt-8 mb-20">
      <div class="max-w-2xl mx-auto text-center">
        <h1
          class="pb-4 max-xl:h2"
          data-aos="fade-up-sm"
          data-aos-delay="100"
          set:html={markdownify(title)}
        />
      </div>
    </div>
    <div class="container">
      <div
        class="max-w-7xl mx-auto bg-theme-light rounded-xl p-7 lg:p-28"
        data-aos="fade-up-sm"
        data-aos-delay="200"
      >
        <div>
          <ul class="list-none">
            {
              logsReversed.map((log: any, index: number) => (
                <li
                  class="pb-12"
                  data-aos="fade-up-sm"
                  data-aos-delay={`${300 + index * 100}`}
                >
                  <p
                    set:html={markdownify(log.version)}
                    class="before:content-['v'] font-semibold mb-0"
                  />
                  <p class="text-text/70 text-base mb-5">
                    {dateFormat(log.date)}
                  </p>
                  {log.feature && (
                    <p class="font-semibold text-lg mb-2">
                      Features:
                      <span
                        set:html={markdownify(log.feature)}
                        class="font-normal"
                      />
                    </p>
                  )}
                  {log.update && (
                    <p class="font-semibold text-lg mb-2">
                      Update:
                      <span
                        set:html={markdownify(log.update)}
                        class="font-normal"
                      />
                    </p>
                  )}
                  {log.fix && (
                    <p class="font-semibold text-lg">
                      Fixes:
                      <span
                        set:html={markdownify(log.fix)}
                        class="font-normal"
                      />
                    </p>
                  )}
                </li>
              ))
            }
            <li
              data-aos="fade-up-sm"
              data-aos-delay={`${300 + logsReversed.length * 100}`}
            >
              <p class="font-semibold text-lg mb-2">
                Release:
                <span class="font-normal">Initial Release of BlazeX</span>
              </p>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </section>

  <CallToAction
    cta={call_to_action.data}
    data-aos="fade-up-sm"
    data-aos-delay="500"
  />
</Base>
